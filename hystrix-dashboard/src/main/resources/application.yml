server:
  port: 8339
logging:
  config: classpath:logback-spring-local.xml
spring:
  application:
    name: hystrix-dashboard
#忽略权限拦截，外部系统，例如springboot admin 和mq刷新配置都需要权限
management:
  endpoints:
    web:
      exposure:
        #开放所有页面节点  默认只开启了health、info两个节点，注意yml的*要使用双引号
        include: "*"
  endpoint:
    health:
      #显示健康具体信息  默认不会显示详细信息
      show-details: ALWAYS
eureka:
  instance:
    #设置当前实例的主机名称(说明：该host将会在服务调用时使用，调用方需要配置该host对应的ip)
    #如果不想使用host使用ip在注册使用，则配置eureka.instance.perferIpAddress=true
    #preferIpAddress: true
    health-check-url-path: /actuator/health
    perferIpAddress: true
    #ipAddress: 192.168.0.40
  client:
    #指定服务注册中心地址，这里使用3个注册中心相互注册实现集群
    #配置中心，客户端访问，eureka.client.serviceUrl.defaultZone必须在bootstrap下面,
    #必须和spring.cloud.config.discovery.enabled、spring.cloud.config.discovery.serviceId写在一个文件里
   serviceUrl:
      defaultZone: http://127.0.0.1:8806/eureka/,http://127.0.0.1:8807/eureka/
#turbine配置
turbine:
  #可以让同一主机上的服务通过主机名与端口号的组合来进行区分，
  #默认情况下会以host来区分不同的服务，这会使得在本机调试的时候，
  #本机上的不同服务聚合成一个服务来统计
  combine-host-port: true
  #配置监控服务的列表，表明监控哪些服务多个使用","分割
  app-config: config-client
  #用于指定集群名称，当服务数量非常多的时候，可以启动多个Turbine服务来构建不同的聚合集群，
  #而该参数可以用来区分这些不同的聚合集群，同时该参数值可以再Hystrix仪表盘中用来定位不同的聚合集群，
  #只需在Hystrix Stream的URL中通过cluster参数来指定
  #当clusterNameExpression: metadata['cluster']时，
  #假设想要监控的应用配置了eureka.instance.metadata-map.cluster: ABC，
  #则需要配置，同时turbine.aggregator.clusterConfig: ABC
  cluster-name-expression: metadata['cluster']
  aggregator:
    #指定聚合哪些集群,多个使用","分割，默认为default
    cluster-config: owp-demo
  #Turbine的收集端点
  #这里和被监控启动类里的 registrationBean.addUrlMappings("/hystrix.stream")一致
  #springboot1.X默认是/hystrix.stream，2.0默认/actuator/hystrix.stream
#  instanceUrlSuffix: /actuator/hystrix.stream
